<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>This is a list of programs to be run after the files are generated by this program. It can be used for digital signatures, packaging, preparing web sites, creating additional formats, etc. In these commands, the following substitutions will be made: %d -&gt; project directory name (last component only), %t -&gt; translation ID, %e -&gt; Ethnologue code, %h -&gt; home domain, %p -&gt; private/public, %r -&gt; redistributable/restricted. Specify a full path to the command unless the command is in the system executable search path.</value>
  </data>
  <data name="textBox4.Text" xml:space="preserve">
    <value>This is a list of transformation processes you may need to run on your input files, such as
converting &lt;&lt; and &gt;&gt; to « and » or “ and ”, or correcting some other markup to proper
USFM. Specify the name(s) of regular expression (.re) files.</value>
  </data>
  <data name="label32.Text" xml:space="preserve">
    <value>This tab provides information about the books in your project. Each line gives a standard abbreviation which identifies the book, the abbreviation which should be used for this book in the concordance (if any), and the name for this book which is used in cross-references. Click the Update button to update the list to your current books and fill in defaults for blank items.</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAMDAAAAAACACoDgAARgAAACAgAAAAAAgAqAgAAO4OAAAYGAAAAAAIAMgGAACWFwAAEBAAAAAA
        CABoBQAAXh4AACgAAAAwAAAAYAAAAAEACAAAAAAAAAkAAAAAAAAAAAAAAAEAAAABAAAAAAAA////AAD/
        /wCAgIAAAICAAIAAAACAgAAAgP//AKCgoABgYGAA4ODgACAgIACAYIAAoMDAACD//wBg4AAAoMDgAIAg
        QABggKAAoICgAICgwACgoMAAwMDgACCAoACAoKAAIMDgAIDg4ABA4AAAYAAgAGAgQABgQGAAgEBgAMCA
        oADAoMAA4MDgAADg4AAA4P8AYP//AKD//wBYWFgAaGhoABgYGABISEgASFBQAFhgYABgaGgAgPD4ADg4
        OAB4eHgAePD4AID4/wAICAgAQEhIAEhgYAAYeJAAUFhYAFBYYABIYGgASGhoAEhweABAgIgAiJCQAECY
        qAC4uLgAKKjAADDA2ABI2OgAeOjwAIj//wAoKCgAOEhQADhQWABIWFgAOGBoAEBgaABYYGgAOGhwAEBw
        eAAgkKgAOJioAHDw+ACI8PgAiPj/AJD4/wCY+P8AACgwAAg4SABAQEgAQEhQADBQWABIUFgAYGBYAEBY
        YABIWGAAKGBoADBgaABQYGgAGGBwAGhwcAAoaHgAUHB4ADh4gABAeIAAeICAAICIiABAiJAAiIiQAECI
        mABQkJgAGIigACCIoAA4kKAASKCoAFCgqABYoKgAqKioADigsABIoLAAIKC4ACiguAAosMgAMLjIAEC4
        yABguMgAcODoAEjY8ABo6PAAgOjwAGjw+ACI+PgAePj/ADAoKAAIKDgAGDg4AEBAOAAgOEAAKEBAADhA
        QABIQEAAGEBIADBASAA4QEgAUEhIAEhIUABYWFAAQFBYADhYWABAWFgACFBgACBYYAAwWGAAOFhgAFhY
        YABoYGAAcGhgAAhYaAAQWGgAMFhoACBgaABgYGgAUGhoAHBoaAAoYHAAMGhwAEhocABYaHAASHBwAFhw
        cAB4cHAAeHhwABhoeAA4aHgAKHB4ADBweAA4cHgAWHB4AHB4eAAYaIAAKHCAADB4gABIeIAAUHiAAFiA
        gACQiIAAGHCIABh4iAA4eIgAQHiIACiAiAA4gIgASICIAFCAiACIiIgAGICQADiAkAAwiJAASIiQAFCI
        kAAgiJgAOIiYADiQmABAkJgAoKCYAEiYoACYmKAAGJCoACCYqAAwmKgAYKCoACCYsABIqLAAWKiwACio
        uAAwqLgAOKi4AECouABIsLgAULC4AMDAuAAwqMAAOLDAAEi4wABguMAAyMDAADiwyAAouMgAOLjIAEi4
        yABQuMgAWLjIAEjAyABYwMgAYMDIAKjAyADIyMgA0NDIADi40ABIwNAAaMDQANjY0AAowNgAMMjYAEjI
        2ABYyNgAYMjYAEjQ2ABY0NgAYNDYAGjQ2ADg2NgAOMjgAEDI4ABI0OAAWNjgAGDY4ABo2OAAAAAvCQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsJhmIAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwnf2oYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACQkB77cnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKIOa6wEIAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMqjgoB
        KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwkwMCiDAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKDAJCQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk6SSgAAAAAAAAnCQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJYWMJAAAAJzMqCQknJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAACWE2CXMACytedHSySAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACheTiwvK8My
        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
        AAAAAAAAAAAAAAAAAAAAAAAAKIhcMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAj///////AAAH//////8AAAP//////wAAA///////AAAB//////8AAIH/
        /////wAA4H//////AAD4P/////8AAP4fj////wAA/w4D////AAD/gAH///8AAP/AAP///wAA/+AAP///
        AAD/8Dgf//8AAP/wPA///wAA//AeB///AAD/8A8D//8AAP/wBwH//wAA//gCAH//AAD//AAAP/8AAP/+
        AAAf/wAA//8AAA//AAD//4AAB/8AAP//gAAD/wAA///AAMH/AAD//8AB4P8AAP//4ADwfwAA///4AHg/
        AAD///wAPD8AAP///gAYPwAA////AAA/AAD////gAD8AAP////AAfwAA////+AD/AAD////8AccAAP//
        //4AAwAA/////wABAAD/////gAEAAP/////AAQAA/////8ADAAD/////4AMAAP/////gBwAA/////+AH
        AAD/////4A8AAP/////gHwAA/////+A/AAD/////8P8AAP///////wAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAAD///8AUFhQAFhgYACAgIAASHB4ABhQWAAwQEAAaFhYAGBw
        cABAkKAAGJCoAAhQYAAgKDAAGBAYAKiYkABQoLAAKMDgACCowAAIYHAAKDg4AAgICABIkJgAQNDoAFDY
        8ABA0OAAEIioACBASAAgICAAaHh4ADCwwAAwyOgAWOjwAJD4+ABY0OgACFhwAFBQUACYgHgAQICIABiY
        sAAgoMAAILjQAGjo+ADA+PgAUMjYACBQWABwaGAAkICAADhgaAAASFAAGEhQAChYYAAQcHgAOLjIAFDA
        yAAoQEgAYFhYAHh4eABgaGgAUEhIAEhAQABgYGAAMEBIADB4gABw6PAAUMjQADBIUABISEAA0LiwAKCY
        mABIWFgAQGBgAGDI0ABQ0OAAQFhgAGBgWABwYGAAUJCYAGDQ2ABAmKgAOEBAAFCosABg4OgAQGBoAGCI
        kABoyNAAOEhIACggKABYsLgAWMDIAHDg8ABIeHgAeHBwAIiAeABgmKAAYKiwABgQEABImKAAWMjQAEBQ
        UABQeHgAaNjgAFC4yABIaHAAWEhIAGCAiABQaGgAWIiIAGjQ2ABYoKAAiPj4AECAkABYaHAAgICIAFCA
        iABYyNgAUHB4AFBocABASFAAgODoAHDY6AAwOEAAUHiAAFCAgABIoLAAaLjAAEiIkABosLgAYMDIAFiQ
        kABYUFgAWHB4AGB4gABowMgAQEhIAEhYYABo6PAAUJigADhYWABAMDAAUFhYAFjQ2ABAQEAAYLjAAFig
        qABQkJAASGBgAGCwuABQoKgAQHB4AEA4OABAuMgAWGBwAFCYqABYqLAAUIiQABgICABIsLgAmJCAAFiI
        kABg4PAAKBgYADiwuABIeIAAOJCYAFhQUABAaHAASMDQADhoaAA4ODgAMJCgADCAiABYeIAAOMDQACig
        uAAocIAAMCggAJh4gABoaGgAMKi4AECImACQoKAAgIiIAGiosAAoaHgAOHB4ADgwKABYWGAAOIiYACCI
        oAA4oLAAIDAwAEg4QAAwaHgAaGBgADAwMAAoMDAAKGBoADhYYABYUEgASFBQAEBYWABYYFgAcGBYAFhY
        WAB4eHAA6OjoAJiQkACQiJAAcHBoAOjo4ABwcHAAEBAQAFRYUABcZGAAgICEAEx0fAA0QEQAaFxcAGR0
        dABAlKAAGJSsACAsNAAYFBgAVKS0ACzE4AAkqMAADGB0ACg4PAAMDAgATJScAEDU7ABQ3PAAQNDkABCM
        qAAkQEgAJCQgAGx4fAA0zOgAXOj0AJT8/ABY1OgACFxwAFBUVACYgHwAQICMABictAAkpMAAJLjUAGzo
        +ABQzNgAJFBcAHRoZACQhIAAAEhUABhIVAAA3/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOU5
        BNYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqUXOXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADPO0XOBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgQEsgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPw6hwAAAAC1tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEfFMAAAqalwavMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAPy5FjsUUb693NYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuVP2F/trXcHjmx
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALA/HtYAANpNrWlFAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wqrT2oA
        ADwF+thoAAAAAAAAAAAAAAAAAAAAAAAAAADa3HJqomkAAKFtKoGeAAAAAAAAAAAAAAAAAAAAAAAAAABC
        HmQDnYFgTV9jThAJAAAAAAAAAAAAAAAAAAAAAAAAAAAFl2tjUVgQO9hffX06AAAAAAAAAAAAAAAAAAAA
        AAAAAABq+k0wTl8FfTxGTlUDAAAAAAAAAAAAAAAAAAAAAAAAAItWTlpHbflqY1VpXlVpAAAAAAAAAAAA
        AAAAAAAAAAAAANqBSH3mTX1RVAAAVEhrAAAAAAAAAAAAAAAAAAAAAAAAAPPZQHdGEFoJAAAAg05rAAAA
        AAAAAAAAAAAAAAAAAAAAALaDFiFfamVUAAAAcPpUAAAAAAAAAAAAAAAAAAAAAAAAADhkNmVyRkhtAADf
        X14AAAAAAAAAAAAAAAAAAAAAAAAAAP0EckBNY0h9qVZVVAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaU1JY
        2RBIZU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6R/FIQmpGAAC1RAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAkQvpAP1YuO/OyBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9QjbwrTQz//4w/QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD8+/or+fji9m/0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz4/Hw7+4e1QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAOw36uno520AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5eTj4uHgDwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADf3gzd3NUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANrZBtjVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANbVAAAAAAAAn////w////8P////B////8P////x5///+MH///wA
        ///+AD///wwf//8GD///Awf//4AD///AAf//4AD//+AAf//wBj//+Acf//wDj//+AY///wAP///AH///
        4DP///AB///4AP///AD///4B///+A////gP///4H///+D////z8oAAAAGAAAADAAAAABAAgAAAAAAEAC
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAP///wBnWEwAW2JdAE5hXgCRjI0AW3t5ACV9jgAhPUUAUkNGAHiJ
        hQAtz+4ACZq5ABo3QAAJAwEAcp+gAFLi+gBd//8AONz2ABVVZQAwJyIAfkc7AD6UnwAk4v8AWP//ALr/
        /wBIvc8AQFJXAIKOkwAab4EABmN3ABmDlgBJyNUAmf//AFC1wABoWVQArp+bAKSSjQB2cG8Aci0rAEpN
        TQA4aWwAb+75AEa3xgBKQ0MAi52gAF2NkQBmsrcAPm95AF3F0ABbzdkAXFldAFyxuwBjuMAAQm1vAGTO
        2wBPg4kAXa20AGnU3wBtdXgAnH18AHzK1QBKfIMAY8fNAFaNkABbkZcAdf//AF2YoABtW1sAWneCAF3C
        zwBqhY0AbamxAGSvuQBntbcAdtbdAG2wvQBvaWYAhYyKAGCamwBXtrsAZIOJAGyPmgBs1eIAW6CoAGGy
        uwBz3eoAWKSpAGBcWgCuydAAbs7VAG+7xABmsbcASFBTAG7L1gBcvMkAVYyXAHDu/wBMiI0AUSkmAGBF
        QwB0zdMAYauvAFqJjwBXdXwAW56mAF3a6ABFaGwAWLG5AEqgqQBsdXkAb8XPAGbR2wBYd4EAVpigAEht
        bQBgvMEAUnZ7AE+frAA2f40ApXZdAFyRkwBc5fUAP0pMAF6DiwBQk5YASYCFAEaaqQBPV1sApYiHAHWn
        rQA/v88AT1ldAEuSnAA0prUAJSQiALp9ggB+hosAQMLSAHmkrgCHztgAbbi/ADiVpQBDdXwALGRlAFVi
        ZQAwh5kAPZSlADhvcwArGhgAMFxhAEtncgBzaWkAi4+NAIiXmQB5enkAN19rAEBeZQBoX2QAk46PAJqT
        kwCRjYoAWldVAGRhXgDr5+IAnZGPAHhvdQCFiIIAw767ABMQEABsamwAJiQkAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6Hqg4ODg4ODg4ODg4ODg4ODg4ODg4ODqmoiQ4ODg4ODg4ODg4O
        Dg4ODg4ODg4ODiagpKMODg4ODg4ODg4ODg4ODg4ODg4ODg6iBaAFDg4ODg4ODg4ODg4ODg4ODg4ODg4O
        Dp6dnA5dXS0FDg4ODg4ODg4ODg4ODg4ODg6Yl5aVXZOSAw4ODg4ODg4ODg4ODg4ODg4OkI+TNVZIGok8
        Dg4ODg4ODg4ODg4ODg4ODoeGhQ4OgINIoQ4ODg4ODg4ODg4ODg4ODoCTOH18Dnt6QDwODg4ODg4ODg4O
        Dg4ODol3dnU1l11xcD9uDg4ODg4ODg4ODg4ODg4Ddmw2alRdZ2Y/CQ4ODg4ODg4ODg4ODg4OA2IqfV9w
        XVw1P6gODg4ODg4ODg4ODg4ODlhUVlVUOkMOfGxDDg4ODg4ODg4ODg4ODg6YXFZcXEgODi4xcQ4ODg4O
        Dg4ODg4ODg4ORFQhQH0xDg5dPw4ODg4ODg4ODg4ODg4ODjxuOlViXV01bA4ODg4ODg4ODg4ODg4ODg4O
        MzIxMFwuDi0ODg4ODg4ODg4ODg4ODg4ODiwrKildCSYlJQ4ODg4ODg4ODg4ODg4ODg4jIiEgHx4diQ4O
        Dg4ODg4ODg4ODg4ODg4OGxoZegsWIw4ODg4ODg4ODg4ODg4ODg4OFBMSehBDQw4ODg4ODg4ODg4ODg4O
        Dg4ODggMCwNdDg4ODg4ODg4ODg4ODg4ODg4OCQh3cQMODg4ODg4ODg4ODg4ODg4ODg4OBQQDIw4ODp//
        /wAf//8AD///AIf//wDiH/8A8A//APgD/wD8Yf8A/BD/APwAfwD+AD8A/wAfAP+AjwD/wMcA/+BnAP/w
        BwD//AsA//4AAP//AAD//4AA//+AAP//gQD//4MA//+HACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
        AAAAAAAAAAEAAAABAAAAAAAA////AHFhUgBEZmwAh3h7AFRVVQBoXFQAPLPHAA9ccAAqFBQAenp1AF7T
        5ABj//8ANaG2ABwUFQBigIUAEaC4AETS3ACT//8AWpykAL25uACUiIcAZklOAFaSlgBq6fYAX46SAHzN
        1QBgjpEAP4WMAGPU4ABusrsAiImMAGy1wgBWW10AarW8AHHT2ACB19sAj3h6AHWkqQBmv8cAvVxhAH6z
        wAByzNgActzmAHLX5ABxhYIA8///AHXR2AByyNIAXoKHAGjF0gBo2OcAWbK7AFpVUAByZWIAdtLVAGW7
        xwBUZmwAWqOoAGqorABNprIAeIiGAPA7JQCMyMwASK+9AFxfYwAyobUASKi2AERrdADedHQAlJKWAEip
        twBZy+QAWLjDADBrcgBUoZ8AdpKWAHGnsABHQ0QAL01UAEZeaAB7aGcAoqiqAKKcnQB2hYQAeHlwAOja
        1ABfUFQAWFZWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAA5WCgAAAAAAAAAAAAAAAAAAPVMAAAAAAAAA
        AAAAAAAAAAAIUE9OOz0AAAAAAAAAAAAAAAhKSUgARlMAAAAAAAAAAAAADkANAAAyJQAAAAAAAAAAAEsI
        OwAOJyM2AAAAAAAAAAAASwgSMjEAIwYAAAAAAAAAAABLCBIjDgAnAAAAAAAAAAAAAEsIEgAAIQAAAAAA
        AAAAAAAASwgdDgAAAAAAAAAAAAAAAAAACBIhAAAAAAAAAAAAAAAAAABLEhEQMQAAAAAAAAAAAAAAAA0Y
        CwoAAAAAAAAAAAAAAAAIBwYFAAAAAAAAAAAAAAAAAA4OAL//AAAf/wAAn/8AAMD/AADhPwAA8Z8AAPEP
        AAD4JwAA/BcAAP43AAD/DwAA/8cAAP/gAAD/8AAA//AAAP/5AAA=
</value>
  </data>
</root>